CREATE TABLE users (
  id INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
  email VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  remember_token VARCHAR(255),
  payment_id INT,
  PRIMARY KEY (id)
);

CREATE TABLE payment (
  id INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
  card_number VARCHAR(16) NOT NULL,
  exp_date VARCHAR(10) NOT NULL,
  cvv VARCHAR(3) NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE user_activity_log (
  id INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
  user_id INT NOT NULL,
  route VARCHAR(255) NOT NULL,
  exception_message VARCHAR(255),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
);

CREATE TABLE ticket (
  id INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
  type_id INT NOT NULL,
  name VARCHAR(255) NOT NULL,
  location VARCHAR(255) NOT NULL,
  seller_id INT NOT NULL,
  price INT NOT NULL,
  date_of_ticket DATE NOT NULL,
  is_sold BOOLEAN DEFAULT false,
  buyer_id INT,
  PRIMARY KEY (id)
);

CREATE TABLE ticket_type (
  id INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
  name VARCHAR(255) NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE favorite_tickets(
  user_id INT NOT NULL,
  ticket_id INT NOT NULL,
  PRIMARY KEY (user_id, ticket_id),
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (ticket_id) REFERENCES ticket(id)
);

CREATE TABLE reserved_tickets(
  id INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
  user_id INT NOT NULL,
  ticket_id INT NOT NULL,
  reserved_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (ticket_id) REFERENCES ticket(id)
);
